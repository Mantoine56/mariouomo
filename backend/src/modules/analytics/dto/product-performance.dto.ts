import { ApiProperty } from '@nestjs/swagger';

/**
 * DTO for product performance data
 */
export class ProductPerformanceItemDto {
  @ApiProperty({
    description: 'Product ID',
    example: '550e8400-e29b-41d4-a716-446655440000',
  })
  productId: string;

  @ApiProperty({
    description: 'Product name',
    example: 'Premium Leather Jacket',
  })
  productName: string;

  @ApiProperty({
    description: 'Number of units sold',
    example: 42,
  })
  unitsSold: number;

  @ApiProperty({
    description: 'Total revenue generated by this product',
    example: 4199.99,
  })
  revenue: number;

  @ApiProperty({
    description: 'Profit margin percentage',
    example: 35.5,
  })
  profitMargin: number;

  @ApiProperty({
    description: 'Number of views',
    example: 250,
  })
  views: number;

  @ApiProperty({
    description: 'Conversion rate as percentage',
    example: 16.8,
  })
  conversionRate: number;
}

/**
 * DTO for product performance trend data
 */
export class ProductPerformanceTrendDto {
  @ApiProperty({
    description: 'The time period (date)',
    example: '2025-01-15',
  })
  date: string;

  @ApiProperty({
    description: 'Total units sold across all products',
    example: 125,
  })
  unitsSold: number;

  @ApiProperty({
    description: 'Total revenue across all products',
    example: 12500.75,
  })
  revenue: number;
}

/**
 * DTO for complete product performance analytics response
 */
export class ProductPerformanceResponseDto {
  @ApiProperty({
    description: 'Total units sold across all products',
    example: 1250,
  })
  totalUnitsSold: number;

  @ApiProperty({
    description: 'Total revenue from all products',
    example: 125000.50,
  })
  totalRevenue: number;

  @ApiProperty({
    description: 'Average profit margin across all products',
    example: 32.5,
  })
  averageProfitMargin: number;

  @ApiProperty({
    description: 'Average conversion rate across all products',
    example: 15.2,
  })
  averageConversionRate: number;

  @ApiProperty({
    description: 'Performance data for individual products',
    type: [ProductPerformanceItemDto],
  })
  productPerformance: ProductPerformanceItemDto[];

  @ApiProperty({
    description: 'Product performance trends over time',
    type: [ProductPerformanceTrendDto],
  })
  performanceTrends: ProductPerformanceTrendDto[];

  @ApiProperty({
    description: 'Date range for the analytics',
    example: {
      startDate: '2025-01-01T00:00:00.000Z',
      endDate: '2025-01-31T23:59:59.999Z',
    },
  })
  dateRange: {
    startDate: Date;
    endDate: Date;
  };
}

/**
 * DTO for product performance error response
 */
export class ProductPerformanceErrorResponseDto {
  @ApiProperty({
    description: 'Error message',
    example: 'Failed to retrieve product performance metrics',
  })
  error: string;

  @ApiProperty({
    description: 'Detailed error message',
    example: 'Database connection error',
  })
  message: string;

  @ApiProperty({
    description: 'Date range that was requested',
    example: {
      startDate: '2025-01-01T00:00:00.000Z',
      endDate: '2025-01-31T23:59:59.999Z',
    },
  })
  dateRange?: {
    startDate: Date;
    endDate: Date;
  };
}
